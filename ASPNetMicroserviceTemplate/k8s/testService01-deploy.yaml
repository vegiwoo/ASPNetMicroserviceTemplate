# Манифест - Заголовок
apiVersion: apps/v1
kind: Deployment
# Манифест - Объект deployment
metadata:
  # Имя сервиса
  name: testservice01
  namespace: default
spec:
  # Количество реплик сервиса 
  replicas: 1
  selector:
    matchLabels:
      app: testservice01 # Селектор для поиска подов
  # Указание стратегии обновления
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1 # Количество подов, которые могут быть недоступны во время обновления
      maxSurge: 2       # Количество подов, которые могут быть созданы во время обновления
  template:
    # Манифест - Объект pod (PodSpec)
    metadata:
      labels:
        app: testservice01 # Метаданные для поиска подов
    spec:
      priorityClassName: hight-priority # Указание класса приоритета
      containers:
        # Имя контейнера
      - name: testservice01-container
        # Адрес образа на Docker Hub
        image: docker.io/vegiwoo/aspnetmicroservicetemplate:1.0.31
        resources:
          # Ресурсы, которые будут выделены контейнеру
          requests:
            memory: "256Mi" # Минимально необходимая память в мебибайтах 
            cpu: "250m"     # Минимально необходимый CPU в миллиярдных долях (250m = 25% ядра)
          # Лимиты, которые могут быть выделены контейнеру
          limits:
            memory: "256Mi"   # Максимально допустимая память в мебибайтах 
            cpu: "250m"       # Максимально допустимый CPU
        ports:  
        - containerPort: 8081
        # Readiness and liveness probe
        readinessProbe:
          initialDelaySeconds: 10 # Задержка перед проверкой
          periodSeconds: 30       # Период проверки
          # Выполняется этот http-запрос
          httpGet:
            path: /api/ready
            port: 8081
            scheme: HTTP
          timeoutSeconds: 2       # Таймаут ответа на запрос
          failureThreshold: 1     # Количество допустимых неудачных попыток
          successThreshold: 1     # Количество необходимых успешных попыток
        livenessProbe:
          initialDelaySeconds: 30 
          periodSeconds: 30       
          httpGet:
            path: /api/health
            port: 8081
            scheme: HTTP
          timeoutSeconds: 5       
          failureThreshold: 3
          successThreshold: 1
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        # Test! 
        - name: AVATAR_ENDPOINT
          value: http://robohash-cip:8082 # Ссылка на сервис RoboHash
        - name: NASDAQ_ENDPOINT
          value: http://nasdaq-cip:8083 # Ссылка на сервис Nasdaq Data Link
# ---
# # Тестовый сервис 1 - NodePort
# apiVersion: v1
# kind: Service
# metadata:
#   name: testservice01-np
#   namespace: default
# spec:
#   selector:
#     app: testservice01
#   ports:
#   - port: 8081
#     targetPort: 8081
#     protocol: TCP
#   type: NodePort
---
# ClusterIP для сервиса
# - сервис доступен только внутри кластера
apiVersion: v1
kind: Service
metadata:
  name: testservice01-ip
  namespace: default
spec:
  selector:
    app: testservice01
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
  type: ClusterIP